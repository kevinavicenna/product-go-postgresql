services:
  web:
    container_name: product-app
    build: .
    ports: ["8080:8080"]
    environment:
      - POSTGRES_HOST=db.default.svc.cluster.local
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - go-blog-network
  

  caddy:
    container_name: caddy
    image: caddy
    depends_on:
      - web
    ports: ["80:80"]
    volumes:
      - caddy-config:/config
      - caddy-data:/data
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    networks:
      - go-blog-network
  
        
  db:
    container_name: product-db
    image: postgres:16.3
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    volumes:
      - dummy-data:/var/lib/postgresql/data
    networks:
      - go-blog-network
  
    
volumes:
  dummy-data:
  caddy-config:
  caddy-data:

networks:
  go-blog-network: