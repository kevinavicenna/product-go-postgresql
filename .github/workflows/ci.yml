# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.x'

    - name: Install dependencies
      run: go mod tidy

    - name: Build the application
      run: |
        echo "Building the Go application..."
        go build -o testing main.go
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Docker Build
      run: |
        docker build -t product-go-postgresql:${{ github.sha }} .
        docker tag product-go-postgresql:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/product-go-postgresql:latest
    
    - name: Trivy Scan
      run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image ${{ secrets.DOCKER_USERNAME }}/product-go-postgresql:latest

    - name: Docker Hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    
    - name: Docker Push 
      run: |
        docker image push ${{ secrets.DOCKER_USERNAME }}/product-go-postgresql:latest